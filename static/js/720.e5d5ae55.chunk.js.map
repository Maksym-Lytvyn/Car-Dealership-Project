{"version":3,"file":"static/js/720.e5d5ae55.chunk.js","mappings":"mRAwFA,UAvEgB,WACd,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAoCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IACtBC,GAAYN,EAAAA,EAAAA,IAAYO,EAAAA,IACxBC,GAAcR,EAAAA,EAAAA,IAAYS,EAAAA,IAC1BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiBN,EAAYE,EAAcT,GAEjDc,EAAAA,EAAAA,YAAU,WACRH,GAASI,EAAAA,EAAAA,GAAcrB,IACvBiB,GAASK,EAAAA,EAAAA,OACTjB,GAAc,EAChB,GAAG,CAACY,EAAUjB,KAEdoB,EAAAA,EAAAA,YAAU,WACsB,KAA1BD,EAAeI,QACjBlB,GAAc,EAElB,GAAG,CAACc,EAAeI,UAEnBH,EAAAA,EAAAA,YAAU,WAEJd,EAAKiB,OAAS,GAChBC,OAAOC,SAAS,CACdC,IAAKC,IACLC,SAAU,UAGhB,GAAG,CAACtB,IAMJ,OACEuB,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CACGrB,GACCsB,IAAAA,OAAAA,QACE,+OAEHpB,IAAYF,IAASuB,EAAAA,EAAAA,KAACC,EAAAA,EAAO,KAC9BD,EAAAA,EAAAA,KAACE,EAAAA,EAAM,KACPF,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CAAC7B,KAAMO,EAAYE,EAAcT,IACzCO,GAAqC,KAAb,OAAXE,QAAW,IAAXA,OAAW,EAAXA,EAAaQ,UAAgBS,EAAAA,EAAAA,KAACI,EAAAA,EAAS,IACpDhC,IAAeO,IAAYE,IAC1BmB,EAAAA,EAAAA,KAAA,UACEK,MAAO,CACLC,QAAS,QACTC,MAAO,UACPC,SAAU,GACVC,WAAY,IACZC,eAAgB,YAChBC,YAAa,OACbC,WAAY,OACZC,OAAQ,UACRC,gBAAiB,cACjBC,aAAc,KAEhBC,QA5BoB,WAC1B/C,GAAQ,SAAAD,GAAI,OAAIA,EAAO,CAAC,GAC1B,EA0BqC8B,SAC9B,sFAMT,C","sources":["pages/Catalog/Catalog.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { getCarsByPage } from 'redux/operations';\nimport { resetFilter } from 'redux/filtersSlice';\nimport {\n  selectIsLoading,\n  selectError,\n  selectCars,\n  selectFiltredCars,\n  selectIsFiltred,\n} from 'redux/selectors';\nimport { CarsList } from 'components/CarList';\nimport { Search } from 'components/Search';\nimport { Spinner } from 'components/Spinner';\nimport { NoFiltred } from 'components/NotFiltred';\n\nconst Catalog = () => {\n  const [page, setPage] = useState(1);\n  const [isBtnShown, setIsBtnShown] = useState(true);\n  const cars = useSelector(selectCars);\n  const error = useSelector(selectError);\n  const loading = useSelector(selectIsLoading);\n  const isFiltred = useSelector(selectIsFiltred);\n  const filtredCars = useSelector(selectFiltredCars);\n  const dispatch = useDispatch();\n\n  const arrayForRender = isFiltred ? filtredCars : cars;\n\n  useEffect(() => {\n    dispatch(getCarsByPage(page));\n    dispatch(resetFilter());\n    setIsBtnShown(true);\n  }, [dispatch, page]);\n\n  useEffect(() => {\n    if (arrayForRender.length === 36) {\n      setIsBtnShown(false);\n    }\n  }, [arrayForRender.length]);\n\n  useEffect(() => {\n    const height = 426;\n    if (cars.length > 8) {\n      window.scrollBy({\n        top: height * 1.5,\n        behavior: 'smooth',\n      });\n    }\n  }, [cars]);\n\n  const handleLoadMoreClick = () => {\n    setPage(page => page + 1);\n  };\n\n  return (\n    <main>\n      {error &&\n        Notiflix.Notify.failure(\n          'Схоже, виникла помилка. Спробуйте інший запит'\n        )}\n      {loading && !error && <Spinner />}\n      <Search />\n      <CarsList cars={isFiltred ? filtredCars : cars} />\n      {isFiltred && filtredCars?.length === 0 && <NoFiltred />}\n      {isBtnShown && !loading && !isFiltred && (\n        <button\n          style={{\n            display: 'block',\n            color: '#3470FF',\n            fontSize: 16,\n            fontWeight: 500,\n            textDecoration: 'underline',\n            marginRight: 'auto',\n            marginLeft: 'auto',\n            cursor: 'pointer',\n            backgroundColor: 'transparent',\n            marginBottom: 150,\n          }}\n          onClick={handleLoadMoreClick}\n        >\n          Завантажити ще\n        </button>\n      )}\n    </main>\n  );\n};\n\nexport default Catalog;\n"],"names":["_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","isBtnShown","setIsBtnShown","cars","useSelector","selectCars","error","selectError","loading","selectIsLoading","isFiltred","selectIsFiltred","filtredCars","selectFiltredCars","dispatch","useDispatch","arrayForRender","useEffect","getCarsByPage","resetFilter","length","window","scrollBy","top","height","behavior","_jsxs","children","Notiflix","_jsx","Spinner","Search","CarsList","NoFiltred","style","display","color","fontSize","fontWeight","textDecoration","marginRight","marginLeft","cursor","backgroundColor","marginBottom","onClick"],"sourceRoot":""}